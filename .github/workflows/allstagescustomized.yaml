on:
  push:
    branches:
    - 'main'

permissions:
  id-token: write
  contents: read

name: Prod Deployment

jobs:
  development:
    name: 'Deploy Development'
    runs-on: ubuntu-latest
    environment: dev
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VERSION: 1.3.6
      TF_VAR_ENV: ${{ vars.ENV }}
      TF_BACKEND_CONFIG: |
        storage_account_name  = "tfstate52343"
        container_name        = "tfstate"
        key                   = "dev.terraform.tfstate"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform init
        id: init
        run: terraform init -backend-config="${TF_BACKEND_CONFIG}"

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -var environment=$TF_VAR_ENV 

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve

  production:
    name: 'Deploy Production'
    runs-on: ubuntu-latest
    needs: development
    environment: prod
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      TF_VERSION: 1.5.7
      TF_VAR_ENV: ${{ vars.ENV }}
      TF_BACKEND_CONFIG: |
        storage_account_name  = "tfstate52343"
        container_name        = "tfstate"
        key                   = "prod.terraform.tfstate"
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check

      - name: Terraform fmt
        id: workspace
        run: terraform workspace new prod

      - name: Terraform init
        id: init
        run: terraform init -backend-config="${TF_BACKEND_CONFIG}"

      - name: Terraform validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform plan
        id: plan
        run: terraform plan -no-color -var environment=$TF_VAR_ENV

      - name: Terraform apply
        id: apply
        run: terraform apply -auto-approve
